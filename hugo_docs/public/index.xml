<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CPO (CYBERTEC-PG-Operator) on CYBERTEC-PG-Operator</title>
    <link>http://localhost:1313/CYBERTEC-pg-operator/</link>
    <description>Recent content in CPO (CYBERTEC-PG-Operator) on CYBERTEC-PG-Operator</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Mar 2024 14:26:51 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/CYBERTEC-pg-operator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/introduction/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/introduction/</guid>
      <description>Backups are essential for databases. From broken storage to deployments gone wrong, backups often save the day. Starting with pg_dump, which was released in the late 1990s, to the archiving of WAL files (PostgreSQL 8.0 / 2005) and pg_basebackup (PostgreSQL 9.0 / 2010), PostgreSQL already offers built-in options for backups and restores based on logical and physical backups.&#xA;Backups with pgBackRest CPO relies on pgBackRest as its backup solution, a tried-and-tested tool with extensive backup and restore options.</description>
    </item>
    <item>
      <title>Sidecars</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/customize_cluster/sidecars/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/customize_cluster/sidecars/</guid>
      <description>Starting with the Single-Node-Cluster from the previous section, we want to modify the Instance a bit to see.&#xA;CPU and Memory spec: resources: limits: cpu: 1000m memory: 500Mi requests: cpu: 500m memory: 500mi Based on the ressources-Definiton we&amp;rsquo;re able to modify the reserved Hardware (requests) and the limits, which allows use to consume more than the reserved definitons if the k8s-worker has this hardware available. There are some Restrictions when modifiying the limits-section.</description>
    </item>
    <item>
      <title>via Blockstorage (pvc)</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/pvc/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/pvc/</guid>
      <description>Backups on PVC (PersistentVolumeClaim) When using block storage, the operator creates an additional pod that acts as a repo host. Based on a TLS connection, the repo host obtains the data for the Backup from the current primary of the cluster, which is compressed before being sent. WAL archives are pushed from the primary pod to the repo host.&#xA;apiVersion: cpo.opensource.cybertec.at/v1 kind: postgresql metadata: name: cluster namespace: cpo spec: backup: pgbackrest: image: &amp;#39;docker.</description>
    </item>
    <item>
      <title>Architecture</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/architecture/architecture/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/architecture/architecture/</guid>
      <description>This chapter covers all important aspects relating to the architecture of CPO and the associated components. In addition to the underlying Kubertnetes, the various components and their interaction for the operation of a PostgreSQL cluster are analysed.&#xA;Brief overview of the components Network-Traffic PG-Cluster-intern Traffic With internal PG cluster-internal traffic, we are talking about all traffic that is necessary for the operation of the cluster itself. This includes&#xA;Communication for the sync of the replicas: pg_basebackup &amp;amp; streaming replication Communication with pgBackRest (if configured) Backups WAL archiving replica-create for new replicas The figure below shows the internal traffic flows with pgBackRest based on block storage (left) or cloud storage (right)</description>
    </item>
    <item>
      <title>via S3</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/aws/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/aws/</guid>
      <description>This chapter describes the use of pgBackRest in combination with with AWS S3 or S3-compatible storage such as MinIO, Cloudian HyperStore or SwiftStack. It is not absolutely necessary to operate a Kubernetes on the AWS Cloud Platform. However, as with any cloud storage, the efficiency and therefore the duration of a backup depends on the connection.&#xA;This Chapter will use AWS S3 for the example, the usage of different s3-compatible Storage is similiar.</description>
    </item>
    <item>
      <title>Software-Components</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/architecture/compontens/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/architecture/compontens/</guid>
      <description>Various software components are used to operate CPO. This chapter lists the most important components and their respective purposes.&#xA;Basically, the CPO project focusses on the main tasks of each individual component. This means that each component does what it does best and only that. In addition to reliable operation, this should also ensure efficient development and project management that utilises existing approaches rather than fighting against them.&#xA;1. CYBERTEC-pg-operator The CYBERTEC-pg-operator is a Kubernetes operator that automates the operation and management of PostgreSQL databases on Kubernetes clusters.</description>
    </item>
    <item>
      <title>Additional Volumes</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/customize_cluster/additional-volumes/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/customize_cluster/additional-volumes/</guid>
      <description> additionalVolumes: - name: empty mountPath: /opt/empty targetContainers: - all volumeSource: emptyDir: {} # - name: data # mountPath: /home/postgres/pgdata/partitions # targetContainers: # - postgres # volumeSource: # PersistentVolumeClaim: # claimName: pvc-postgresql-data-partitions # readyOnly: false # - name: conf # mountPath: /etc/telegraf # subPath: telegraf.conf # targetContainers: # - telegraf-sidecar # volumeSource: # configMap: # name: my-config-map </description>
    </item>
    <item>
      <title>via GCS</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/gcs/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/gcs/</guid>
      <description>This chapter describes the use of pgBackRest in combination with Google Cloud Storage (gcs). It is not absolutely necessary to operate a Kubernetes on the Google Cloud Platform. However, as with any cloud storage, the efficiency and therefore the duration of a backup depends on the connection.&#xA;Precondition: a gcs-bucket and a priviledged role is needed for this chapter. Create a gcs-bucket on the google cloud console Create a priviledged service-role Modifying the Cluster As soon as all requirements are met:</description>
    </item>
    <item>
      <title>Rolling-Updates</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/architecture/rolling_update/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/architecture/rolling_update/</guid>
      <description>Whether updating the minor version, changing the hardware definitions of the cluster or other adjustments that require a pod restart, CPO ensures that the update is as uninterrupted as possible.&#xA;This means that adjustments are carried out on the various pods of a particular cluster one after the other and in a sensible sequence. This happens as soon as a cluster consists of more than 1 PostgreSQL node.&#xA;In the event of a necessary restart, the operator independently stops the pods and does not leave this to Kubernetes.</description>
    </item>
    <item>
      <title>via Azure-Blob</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/azure_blob/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/azure_blob/</guid>
      <description>This chapter describes the use of pgBackRest in combination with Azure Blob Storage. It is not absolutely necessary to operate a Kubernetes on the Azure Cloud Platform. However, as with any cloud storage, the efficiency and therefore the duration of a backup depends on the connection.&#xA;Precondition: a blob-storage-volume and a priviledged role is needed for this chapter. Create a blob-storage-volume on the Azure console Create a priviledged service-role Modifying the Cluster As soon as all requirements are met:</description>
    </item>
    <item>
      <title>Encrypted Backups</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/encryption/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/encryption/</guid>
      <description>pgBackRest also allows you to encrypt your backups on the client side before uploading them. This is possible with any type of storage and is very easy to activate.&#xA;Firstly, we need to define an encryption key. This must be specified separately for each repo and stored in the same secret that is defined in the spec.backup.pgbackrest.configuration.secret object.&#xA;kind: Secret apiVersion: v1 metadata: name: cluster-1-s3-credential namespace: cpo stringData: s3.conf | [global] repo1-s3-key=YOUR_S3_KEY repo1-s3-key-secret=YOUR_S3_KEY_SECRET repo1-cipher-pass=YOUR_ENCRYPTION_KEY We also need to configure the type of encryption for pgBackRest.</description>
    </item>
    <item>
      <title>Check/Monitor Backups</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/backup/check_backups/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/backup/check_backups/</guid>
      <description>There are several ways to gain an insight into the current status of pgBackRest. One of these is to use pgBackRest within the container. This can be done both via the repo host and the Postgres pod.&#xA;pgbackrest via terminal (Repo-Host-Pod) kubectl exec cluster-5-pgbackrest-repo-host-0 --stdin --tty -- pgbackrest info stanza: db status: ok cipher: none db (current) wal archive min/max (16): 00000006000000000000005C/000000070000000000000092 full backup: 20240517-125730F timestamp start/stop: 2024-05-17 12:57:30+00 / 2024-05-17 12:57:41+00 wal start/stop: 00000007000000000000005E / 00000007000000000000005E database size: 22.</description>
    </item>
    <item>
      <title>The Project</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/project/project/</link>
      <pubDate>Mon, 11 Mar 2024 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/project/project/</guid>
      <description></description>
    </item>
    <item>
      <title>Container Images</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/project/container_images/</link>
      <pubDate>Mon, 11 Mar 2024 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/project/container_images/</guid>
      <description>For each version of the operator and the required PostgreSQL and other required containers, the corresponding image is provided on Dockerhub.&#xA;Operator container images The operator images are the central components that control the operation and administration of the PostgreSQL databases. These images are available in the following repository on DockerHub:&#xA;Operator Images&#xA;The repository contains all the necessary images for running the Cybertec PG Operator in a Kubernetes environment. These images are updated regularly to ensure the latest features and security updates.</description>
    </item>
    <item>
      <title>PostgreSQL</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/crd/crd-postgresql/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/crd/crd-postgresql/</guid>
      <description>postgresql Name Type required Description apiVersion string true acid.zalando.do/v1 kind string true metadata object true spec object true status object false spec Name Type required Description backup object false Enables the definition of a customised backup solution for the cluster teamId string true name of the team the cluster belongs to numberOfInstances Int true Number of nodes of the cluster dockerImages string false Define a custom image to override the default schedulerName string false Define a custom Name to override the default spiloRunAsUser string false Define an User id which should be used for the pods spiloRunAsGroup string false Define an Group id which should be used for the pods spiloFSGroup string false Persistent Volumes for the pods in the StatefulSet will be owned and writable by the group ID specified.</description>
    </item>
    <item>
      <title>Operator-Configuration</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/crd/crd-operator-configurator/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/crd/crd-operator-configurator/</guid>
      <description>Name Type default Description enable_crd_registration boolean true crd_categories string all enable_lazy_spilo_upgrade boolean false enable_pgversion_env_var boolean true enable_spilo_wal_path_combat boolean false etcd_host string kubernetes_use_configmaps boolean false docker_image string sidecars list enable_shm_volume boolean true workers int 8 max_instances int -1 min_instances int -1 resync_period string 30m repair_period string 5m set_memory_request_to_limit boolean false debug_logging boolean true enable_db_access boolean true spilo_privileged boolean false spilo_allow_privilege_escalation boolean true watched_namespace string * major-upgrade-specific Name Type default Description major_version_upgrade_mode string off major_version_upgrade_team_allow_list string minimal_major_version string 9.</description>
    </item>
    <item>
      <title>Setup local Kubernetes</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/installation/dev-k8s/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/installation/dev-k8s/</guid>
      <description>There are various options for setting up a local Kubernetes environment. This chapter deals with the following two variants:&#xA;minikube crc (CodeReadyContainers from RedHat) Minikube Minikube is a tool that makes it possible to run Kubernetes locally on a single computer. It sets up a minimal but functional Kubernetes environment suitable for development and testing purposes. Minikube supports most Kubernetes features and provides an easy way to launch and manage Kubernetes clusters on local machines without the need for a complex cloud infrastructure.</description>
    </item>
    <item>
      <title>Install CPO</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/installation/installation/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/installation/installation/</guid>
      <description>Prerequisites For the installation you either need our CPO tutorial repository or you install CPO directly from our registry. Exception: Installation via Operatorhub (Openshift only)&#xA;CPO-Tutorial-Repository To get started, you can fork our tutorial repository on Github and then download it. CYBERTEC-operator-tutorials&#xA;GITHUB_USER=&amp;#39;[YOUR_USERNAME]&amp;#39; git clone https://github.com/$GITHUB_USER/CYBERTEC-operator-tutorials.git cd CYBERTEC-operator-tutorials CPO-Registry Create Namespace # kubectl kubectl create namespace cpo # oc oc create namespace cpo Install CPO There are several ways to install CPO:</description>
    </item>
    <item>
      <title>Operator-Configuration</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/installation/configuration_operator/</link>
      <pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/installation/configuration_operator/</guid>
      <description>Users who are already used to working with PostgreSQL from Baremetal or VMs are already familiar with the need for various files to configure PostgreSQL. These include&#xA;postgresql.conf pg_hba.conf &amp;hellip; Although these files are available in the container, direct modification is not planned. As part of the declarative mode of operation of the operator, these files are defined via the operator. The modifying intervention within the container also represents a contradiction to the immutability of the container.</description>
    </item>
    <item>
      <title>PostgreSQL 13</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg13/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg13/</guid>
      <description>The extensions listed are included in the standard images. This list refers to PostgreSQL 13. Name Default Version Comment adminpack 2.1 Administrative functions for PostgreSQL amcheck 1.2 Functions for verifying relation integrity autoinc 1.0 Functions for autoincrementing fields bloom 1.0 Bloom access method - signature file based index btree_gin 1.3 Support for indexing common datatypes in GIN btree_gist 1.5 Support for indexing common datatypes in GiST citext 1.6 Data type for case-insensitive character strings credcheck 2.</description>
    </item>
    <item>
      <title>PostgreSQL 14</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg14/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg14/</guid>
      <description>The extensions listed are included in the standard images. This list refers to PostgreSQL 14. Name Default Version Comment adminpack 2.1 Administrative functions for PostgreSQL amcheck 1.3 Functions for verifying relation integrity autoinc 1.0 Functions for autoincrementing fields bloom 1.0 Bloom access method - signature file based index btree_gin 1.3 Support for indexing common datatypes in GIN btree_gist 1.6 Support for indexing common datatypes in GiST citext 1.6 Data type for case-insensitive character strings credcheck 2.</description>
    </item>
    <item>
      <title>PostgreSQL 15</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg15/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg15/</guid>
      <description>The extensions listed are included in the standard images. This list refers to PostgreSQL 15. Name Default Version Comment adminpack 2.1 Administrative functions for PostgreSQL amcheck 1.3 Functions for verifying relation integrity autoinc 1.0 Functions for autoincrementing fields bloom 1.0 Bloom access method - signature file based index btree_gin 1.3 Support for indexing common datatypes in GIN btree_gist 1.7 Support for indexing common datatypes in GiST citext 1.6 Data type for case-insensitive character strings credcheck 2.</description>
    </item>
    <item>
      <title>PostgreSQL 16</title>
      <link>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg16/</link>
      <pubDate>Thu, 28 Dec 2023 14:26:51 +0100</pubDate>
      <guid>http://localhost:1313/CYBERTEC-pg-operator/extensions/pg16/</guid>
      <description>The extensions listed are included in the standard images. This list refers to PostgreSQL 16. Name Default Version Comment adminpack 2.1 Administrative functions for PostgreSQL amcheck 1.3 Functions for verifying relation integrity autoinc 1.0 Functions for autoincrementing fields bloom 1.0 Bloom access method - signature file based index btree_gin 1.3 Support for indexing common datatypes in GIN btree_gist 1.7 Support for indexing common datatypes in GiST citext 1.6 Data type for case-insensitive character strings credcheck 2.</description>
    </item>
  </channel>
</rss>
