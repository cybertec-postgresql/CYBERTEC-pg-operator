<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on CYBERTEC-PG-Operator</title><link>https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/</link><description>Recent content in Architecture on CYBERTEC-PG-Operator</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 07 Mar 2023 14:26:51 +0100</lastBuildDate><atom:link href="https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Software-Components</title><link>https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/compontens/</link><pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate><guid>https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/compontens/</guid><description>&lt;p>Various software components are used to operate CPO. This chapter lists the most important components and their respective purposes.&lt;/p>
&lt;p>Basically, the CPO project focusses on the main tasks of each individual component. This means that each component does what it does best and only that.
In addition to reliable operation, this should also ensure efficient development and project management that utilises existing approaches rather than fighting against them.&lt;/p>
&lt;div class="flex align-center gdoc-page__anchorwrap">
 &lt;h3 id="1-cybertec-pg-operator"
 >
 1. CYBERTEC-pg-operator
 &lt;/h3>
 &lt;a data-clipboard-text="https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/compontens/#1-cybertec-pg-operator" class="gdoc-page__anchor clip flex align-center" title="Anchor to: 1. CYBERTEC-pg-operator" aria-label="Anchor to: 1. CYBERTEC-pg-operator" href="#1-cybertec-pg-operator">
 &lt;svg class="gdoc-icon gdoc_link">&lt;use xlink:href="#gdoc_link">&lt;/use>&lt;/svg>
 &lt;/a>
&lt;/div>
&lt;p>The CYBERTEC-pg-operator is a Kubernetes operator that automates the operation and management of PostgreSQL databases on Kubernetes clusters. It facilitates the provisioning, scaling, backup and recovery of PostgreSQL clusters and integrates tools such as Patroni and pgBackRest for high availability and backup management.&lt;/p></description></item><item><title>Rolling-Updates</title><link>https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/rolling_update/</link><pubDate>Tue, 07 Mar 2023 14:26:51 +0100</pubDate><guid>https://cybertec-postgresql.github.io/CYBERTEC-pg-operator/architecture/rolling_update/</guid><description>&lt;p>Whether updating the minor version, changing the hardware definitions of the cluster or other adjustments that require a pod restart, CPO ensures that the update is as uninterrupted as possible.&lt;/p>
&lt;p>This means that adjustments are carried out on the various pods of a particular cluster one after the other and in a sensible sequence. This happens as soon as a cluster consists of more than 1 PostgreSQL node.&lt;/p>
&lt;p>In the event of a necessary restart, the operator independently stops the pods and does not leave this to Kubernetes. The idea behind this is that all replica pods are restarted one after the other first. The operator recognises these by the label cpo.opensource.cybertec.at/role=replica set by Patroni&lt;/p></description></item></channel></rss>